{"version":3,"sources":["components/Login.tsx","pages/LoginPage.tsx","components/Dashboard.tsx","pages/DashboardPage.tsx","routes/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","history","useHistory","name","initialValues","remember","onFinish","values","console","log","push","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","valuePropName","type","htmlType","LoginPage","className","style","width","Dashboard","labelCol","span","wrapperCol","layout","size","Group","Button","value","Option","treeData","title","children","options","DashboardPage","Routes","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50494cca.chunk.js","sourcesContent":["import { Form, Input, Button, Checkbox } from 'antd';\nimport { useHistory } from \"react-router-dom\";\n\nexport const Login = () => {\n    const history = useHistory();\n\n    const onFinish = (values: any) => {\n        console.log('Success:', values);\n        history.push(\"/dashboard\");\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <>\n            <Form\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"Username\"\n                    name=\"username\"\n                    rules={[{ required: true, message: 'Please input your username!' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item name=\"remember\" valuePropName=\"checked\">\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n","import { Card } from 'antd';\n\nimport {Login} from \"../components/Login\";\nimport \"../css/login.css\"\n\nexport const LoginPage = () => {\n    return (\n        <div className={\"login-container\"}>\n            <Card style={{ width: \"100%\" }}>\n                <Login />\n            </Card>\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n    Form,\n    Input,\n    Button,\n    Radio,\n    Select,\n    Cascader,\n    DatePicker,\n    InputNumber,\n    TreeSelect,\n    Switch,\n} from 'antd';\n\nexport const Dashboard = () => {\n    return (\n        <>\n            <Form\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                initialValues={{ size: \"large\" }}\n                size={\"large\"}\n            >\n                <Form.Item label=\"Form Size\" name=\"size\">\n                    <Radio.Group>\n                        <Radio.Button value=\"small\">Small</Radio.Button>\n                        <Radio.Button value=\"default\">Default</Radio.Button>\n                        <Radio.Button value=\"large\">Large</Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item label=\"Input\">\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Select\">\n                    <Select>\n                        <Select.Option value=\"demo\">Demo</Select.Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"TreeSelect\">\n                    <TreeSelect\n                        treeData={[\n                            { title: 'Light', value: 'light', children: [{ title: 'Bamboo', value: 'bamboo' }] },\n                        ]}\n                    />\n                </Form.Item>\n                <Form.Item label=\"Cascader\">\n                    <Cascader\n                        options={[\n                            {\n                                value: 'zhejiang',\n                                label: 'Zhejiang',\n                                children: [\n                                    {\n                                        value: 'hangzhou',\n                                        label: 'Hangzhou',\n                                    },\n                                ],\n                            },\n                        ]}\n                    />\n                </Form.Item>\n                <Form.Item label=\"DatePicker\">\n                    <DatePicker />\n                </Form.Item>\n                <Form.Item label=\"InputNumber\">\n                    <InputNumber />\n                </Form.Item>\n                <Form.Item label=\"Switch\">\n                    <Switch />\n                </Form.Item>\n                <Form.Item label=\"Button\">\n                    <Button>Button</Button>\n                </Form.Item>\n            </Form>\n        </>\n    );\n}\n","import {Dashboard} from \"../components/Dashboard\";\n\nexport const DashboardPage = () => {\n    return (\n        <div>\n            <Dashboard />\n        </div>\n    )\n}\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport {LoginPage} from \"../pages/LoginPage\";\nimport {DashboardPage} from \"../pages/DashboardPage\";\n\nexport const Routes = () => {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path=\"/login\" component={LoginPage} />\n                <Route path=\"/dashboard\" component={DashboardPage} />\n            </Switch>\n        </HashRouter>\n    )\n}\n","import React from 'react';\nimport {Routes} from \"./routes/Routes\";\n\nimport \"antd/dist/antd.css\";\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}